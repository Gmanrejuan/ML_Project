# -*- coding: utf-8 -*-
"""PythonDataScienceBasics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VAUbHF6qZr9upnIutNO5UEVbwqTneUqM
"""

import sys
print('Python: {}'.format(sys.version))

print('Hello World')

"""#Variables"""

space_name = "Mridul"
print(space_name)

type(space_name)

num1 = 1234.50
print(num1)
type(num1)

"""#Data Types"""

test_variable = True
print(test_variable)
type(test_variable)
int_variable = 122
print(int_variable)
print(int_variable + num1)
type(test_variable)
type(int_variable)

list_variable = [1, 2, 3, 122.50, 22.50]

print(list_variable)
type(list_variable)

list_variable[0]

"""#Tuples is immutable= you can't change the values"""

tuple_variable = (1, 2, 3, 122.50, 22.50)

print(tuple_variable)
type(tuple_variable)

tuple_variable[0]

list_variable[0] = 100
print(list_variable)

"""#Set contains unique values"""

set_variable = {1,2,3,4,5}
print(set_variable)
type(set_variable)

list_variable = [1,2,2,2,3,4,5]
type(list(set(list_variable)))

#Dictionary variable
dict_variable = {'name': 'Nicholas', 'Age': 20, 'favorite_color':'red'}
print(dict_variable)
type(dict_variable)

dict_variable['name']
dict_variable['Age']

"""#List"""

#create crud
names = ['Neil Armstrong', 'Buzz Aldrin', 'Sally Ride', 'Uri Gagarin']

#read crud
names

names[0]

names[-1]

len(names)

#update crud
names[-1] = 'Elon Musk'
names

#adding value
names.append('Satya Nadella')
names

names.insert(0, 'Steve Jobs')
names

#delete crud
del names[-2]
names

"""#Dictionaries"""

#create
astranaut = {
    "name": "Elon Musk",
    "suit_size": "Medium",
    "allergies": "peanuts"
}

#read
astranaut['name']
astranaut['suit_size']
astranaut['allergies']

astranaut.keys()

astranaut

astranaut.values()

list(astranaut.keys())[0]

#update
astranaut['suit_size'] = 'Small'
astranaut

astranaut['space_ship'] = 'Galactic 1'
astranaut

#delete
del astranaut['space_ship']
astranaut

"""#Section Condition and loops"""

#Applying logic using the if statement
name = "Neil Armstrong"
if name == "Neil Armstrong":
    print("Hello Neil")

num = 9
if num >= 5:
      print("Number is greater than 5")
else:
      print("Number is less than 5")

p = 0.5
if p >= 0.5:
    print(True)
elif p < 0:
    print("Check your value")
else:
    print(False)

names = ['Neil Armstrong', 'Buzz Aldrin', 'Sally Ride', 'Uri Gagarin']
if 'Neil Armstrong' in names:
    print("Found Neil")

"""#Loops"""

#For Loop
for name in names:
    print(name)

#Adding condition to Loops
for name in names:
    if name == 'Buzz Aldrin':
       print("Sup Buzz")
    elif name == 'Neil Armstrong':
       print("Sup Neil")
    elif name == 'Sally Ride':
       print("Sup Sally")
    else:
       print("Sup some one else")

#break statement
for name in names:
    if name == 'Neil Armstrong':
       print("Sup Neil")
    elif name == 'Buzz Aldrin':
       print("Sup Buzz")
       break
    elif name == 'Sally Ride':
       print("Sup Sally")
    else:
       print("Sup some one else")

#continue statement
for name in names:
    if name == 'Neil Armstrong':
       print("Sup Neil")
    elif name == 'Buzz Aldrin':
       continue
       print("Sup Buzz")
    elif name == 'Sally Ride':
       print("Sup Sally")
    else:
       print("Sup some one else")

#pass statement
for name in names:
    if name == 'Neil Armstrongi':
       print("Sup Neil")
    elif name == 'Buzz Aldrin':
       continue
       print("Sup Buzz")
    elif name == 'Sally Ridei':
       print("Sup Sally")
       break
    else:
       pass  #this was for do nothing

#Loop for x number of times
for i in range(10):
    print(i)

#Loop for x number of times
for i in range(1,11):
    print(i)

#While Loop
luanched_shuttles = 0
total_shuttles = 5
while True:
    print("Shuttle {} launched".format(luanched_shuttles+1)) #inserting shuttle number
    luanched_shuttles+=1
    if luanched_shuttles == total_shuttles:
        print("All shuttles are launched")
        break

#Dictionaries as loop
astranaut = {
    "name": "Elon Musk",
    "suit_size": "Medium",
    "allergies": "peanuts"
}
for key in astranaut.keys():
    print(key)

for value in astranaut.values():
        print(value)

for key, value in astranaut.items():
        print("{} : {}".format(key, value))

#Loop in list
new_list = [name.title() for name in names]
new_list

"""#Functions"""

#Define functions
def lauchpad_welcome():
    print("Hello buddy!")
    print(1+2)
    print(str(3+4)+" Welcome to launchpad")

for i in range(3):
    lauchpad_welcome()

names = ['Neil Armstrong', 'Buzz Aldrin', 'Sally Ride', 'Uri Gagarin']

def custom_welcome(name):
    print('Welcome {}'.format(name))

custom_welcome('Neil')

for name in names:
    custom_welcome(name)

def custom_welcome_to_ship(name, space_ship):
    print('Welcome {} to the {}'.format(name, space_ship))

custom_welcome_to_ship('Neil', 'Galactic 1')

space_ships = ['Galactic 1', 'Galactic 2', 'US Voyager', 'Maxim Amazin']

#two arguments
names = ['Neil Armstrong', 'Buzz Aldrin', 'Sally Ride', 'Uri Gagarin']
for name, space_ship in zip(names, space_ships):
    custom_welcome_to_ship(name, space_ship)

#Same two arguments
for i, name in enumerate(names):
    custom_welcome_to_ship(name, space_ships[i])

#key arguments
def space_suit(color='Blue'):
   print('Your Space suit is {} color'.format(color))

space_suit()

def space_suit_welcome(name, space_ship, color='blue', allergies='none'):
    print('Welcome {} to the {} and the space_ship is {} and you have {} allergies'.format(name, space_ship, color, allergies))

space_suit_welcome('Neil', 'Galactic 1', color='Red') #color can changed while giving arguments
#poisition of the arguments are important
#keyword arguments can be in any order
space_suit_welcome('Neil', 'Galactic 1', allergies='none', color='Red')

def space_suit_welcome_with_return(name, space_ship, color='blue', allergies='none'):
    return 'Welcome {} to the {} and the space_ship is {} and you have {} allergies'.format(name, space_ship, color, allergies)

welcome = space_suit_welcome_with_return('Neil', 'Galactic 1', allergies='none', color='Red')
print(welcome)

#Lamda function or anonymus function
pi = lambda x: x*3.14

pi(2)

"""#Classes and inheritance"""

#classes
#classes as boilerplate for objects
class Person():
  #the method that runs as soon as you created the class
  def __init__(self, name, age, color):
      self.name = name
      self.age = age
      self.color = color
  #date of birth
  def year_of_birth(self):
      return 2025-self.age
  #projected age
  def projected_age(self, years=5):
      return self.age+years

new_person = Person('Tony Stark', 35, 'Blue')

#Accessing a class attribute
new_person.name
new_person.age
new_person.color
new_person.year_of_birth()
new_person.projected_age()

"""#Class Inheritance"""

class Astronaut(Person):
      def __init__(self, name, age, color, mission_length_in_months):
          #inheriting the attributes
          super().__init__(name, age, color)
          self.mission_length_in_months = mission_length_in_months

      #calculating age on return
      def age_on_return(self):
          return self.projected_age(years=int(self.mission_length_in_months/12))

new_astronaut = Astronaut('Elon Musk', 50, 'Green', 12)

new_astronaut.name
new_astronaut.age
new_astronaut.color
new_astronaut.mission_length_in_months
new_astronaut.year_of_birth()
new_astronaut.age_on_return()

"""#Modules"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile helper.py
# def launch_codes():
#    return 123456789

from helper import launch_codes

launch_codes()

from adder import add_numbers

add_numbers(5,3)

"""#Working with packages"""

!pip install requests

!pip list

#Importing requests
import requests

joke_url = 'https://icanhazdadjoke.com'
iss_url = 'https://api.wheretheiss.at/v1/satellites/25544'

my_header = {'Accept': 'application/json'}
# response = requests.get(joke_url, headers=my_header)
#API call
results = requests.get(joke_url, headers=my_header)

jre = results.json()

jre

type(jre)

jre['joke']

type(jre['joke'])